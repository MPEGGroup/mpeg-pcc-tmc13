/* The copyright in this software is being made available under the BSD
 * Licence, included below.  This software may be subject to other third
 * party and contributor rights, including patent rights, and no such
 * rights are granted under this licence.
 *
 * Copyright (c) 2017-2018, ISO/IEC
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of the ISO/IEC nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include "tables.h"

// indicates impossible values in the following table
static const int x = 0;

const uint8_t pcc::kNeighPatternInvMap[64][8] = {
  {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7}, {6, 7, 4, 5, 2, 3, 0, 1},
  {0, 1, 2, 3, 4, 5, 6, 7}, {2, 3, 6, 7, 0, 1, 4, 5}, {2, 3, 6, 7, 0, 1, 4, 5},
  {6, 7, 4, 5, 2, 3, 0, 1}, {4, 5, 0, 1, 6, 7, 2, 3}, {4, 5, 0, 1, 6, 7, 2, 3},
  {0, 1, 2, 3, 4, 5, 6, 7}, {4, 5, 0, 1, 6, 7, 2, 3}, {2, 3, 6, 7, 0, 1, 4, 5},
  {4, 5, 0, 1, 6, 7, 2, 3}, {6, 7, 4, 5, 2, 3, 0, 1}, {0, 1, 2, 3, 4, 5, 6, 7},
  {0, 1, 2, 3, 4, 5, 6, 7}, {5, 1, 7, 3, 4, 0, 6, 2}, {3, 1, 2, 0, 7, 5, 6, 4},
  {5, 7, 4, 6, 1, 3, 0, 2}, {2, 0, 6, 4, 3, 1, 7, 5}, {7, 3, 6, 2, 5, 1, 4, 0},
  {3, 2, 7, 6, 1, 0, 5, 4}, {7, 6, 5, 4, 3, 2, 1, 0}, {5, 4, 1, 0, 7, 6, 3, 2},
  {1, 5, 0, 4, 3, 7, 2, 6}, {1, 0, 3, 2, 5, 4, 7, 6}, {5, 4, 1, 0, 7, 6, 3, 2},
  {3, 2, 7, 6, 1, 0, 5, 4}, {0, 4, 2, 6, 1, 5, 3, 7}, {7, 6, 5, 4, 3, 2, 1, 0},
  {1, 0, 3, 2, 5, 4, 7, 6}, {1, 0, 3, 2, 5, 4, 7, 6}, {4, 0, 6, 2, 5, 1, 7, 3},
  {2, 0, 3, 1, 6, 4, 7, 5}, {4, 6, 5, 7, 0, 2, 1, 3}, {3, 1, 7, 5, 2, 0, 6, 4},
  {6, 2, 7, 3, 4, 0, 5, 1}, {2, 3, 6, 7, 0, 1, 4, 5}, {6, 7, 4, 5, 2, 3, 0, 1},
  {4, 5, 0, 1, 6, 7, 2, 3}, {0, 4, 1, 5, 2, 6, 3, 7}, {0, 1, 2, 3, 4, 5, 6, 7},
  {4, 5, 0, 1, 6, 7, 2, 3}, {2, 3, 6, 7, 0, 1, 4, 5}, {1, 5, 3, 7, 0, 4, 2, 6},
  {6, 7, 4, 5, 2, 3, 0, 1}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 1, 2, 3, 4, 5, 6, 7},
  {4, 0, 6, 2, 5, 1, 7, 3}, {7, 5, 6, 4, 3, 1, 2, 0}, {1, 3, 0, 2, 5, 7, 4, 6},
  {2, 0, 3, 1, 6, 4, 7, 5}, {5, 1, 4, 0, 7, 3, 6, 2}, {0, 4, 1, 5, 2, 6, 3, 7},
  {2, 0, 3, 1, 6, 4, 7, 5}, {6, 4, 2, 0, 7, 5, 3, 1}, {3, 7, 2, 6, 1, 5, 0, 4},
  {4, 6, 5, 7, 0, 2, 1, 3}, {6, 2, 7, 3, 4, 0, 5, 1}, {0, 2, 4, 6, 1, 3, 5, 7},
  {0, 4, 1, 5, 2, 6, 3, 7}, {2, 6, 0, 4, 3, 7, 1, 5}, {4, 0, 6, 2, 5, 1, 7, 3},
  {0, 1, 2, 3, 4, 5, 6, 7},
};

const int pcc::numMaxOccupided[8] = {8, 4, 4, 2, 4, 2, 2, 1};

const uint8_t pcc::kNeighPattern64to9[64] = {
  0, 1, 1, 1, 1, 2, 2, 3, 1, 2, 2, 3, 1, 3, 3, 4, 1, 2, 2, 3, 2, 5,
  5, 6, 2, 5, 5, 6, 3, 6, 6, 7, 1, 2, 2, 3, 2, 5, 5, 6, 2, 5, 5, 6,
  3, 6, 6, 7, 1, 3, 3, 4, 3, 6, 6, 7, 3, 6, 6, 7, 4, 7, 7, 8};

const uint8_t pcc::kNeighPattern64to6[64] = {
  0, 5, 5, x, 5, 1, 1, x, 5, 1, 1, x, x, x, x, x, 2, 3, 3, x, 3, 7,
  7, x, 3, 7, 7, x, x, x, x, x, 2, 3, 3, x, 3, 7, 7, x, 3, 7, 7, x,
  x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x};

const uint8_t pcc::kNeighPattern9to5[9] = {0, 1, 2, 3, 1, 2, 3, 4, 4};

const uint8_t pcc::kNeighPattern9to3[9] = {0, 1, 1, 2, 2, 1, 2, 2, 2};

const uint8_t pcc::kNeighPattern10to7[10] = {0, 1, 2, 3, 4, 5, 3, 4, 5, 6};

const uint8_t pcc::kNeighPattern7to5[7] = {0, 1, 2, 1, 4, 4, 3};

const uint8_t pcc::kOccMapRotateXIdFromPattern[64] = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,
  0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0,
  2, 0, 0, 0, 0, 2, 2, 1, 2, 3, 3, 0, 2, 3, 3, 0, 1, 0, 0, 0};

const uint8_t pcc::kOccMapRotateZIdFromPatternXY[16] = {
  0, 0, 2, 0, 3, 3, 2, 1, 1, 0, 1, 3, 1, 2, 0, 0};

const bool pcc::kOccMapRotateYIdFromPattern[64] = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
  0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
  1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0};

const uint8_t pcc::kOccMapRotateX270[256] = {
  0,   4,   1,   5,   8,   12,  9,   13,  2,   6,   3,   7,   10,  14,  11,
  15,  64,  68,  65,  69,  72,  76,  73,  77,  66,  70,  67,  71,  74,  78,
  75,  79,  16,  20,  17,  21,  24,  28,  25,  29,  18,  22,  19,  23,  26,
  30,  27,  31,  80,  84,  81,  85,  88,  92,  89,  93,  82,  86,  83,  87,
  90,  94,  91,  95,  128, 132, 129, 133, 136, 140, 137, 141, 130, 134, 131,
  135, 138, 142, 139, 143, 192, 196, 193, 197, 200, 204, 201, 205, 194, 198,
  195, 199, 202, 206, 203, 207, 144, 148, 145, 149, 152, 156, 153, 157, 146,
  150, 147, 151, 154, 158, 155, 159, 208, 212, 209, 213, 216, 220, 217, 221,
  210, 214, 211, 215, 218, 222, 219, 223, 32,  36,  33,  37,  40,  44,  41,
  45,  34,  38,  35,  39,  42,  46,  43,  47,  96,  100, 97,  101, 104, 108,
  105, 109, 98,  102, 99,  103, 106, 110, 107, 111, 48,  52,  49,  53,  56,
  60,  57,  61,  50,  54,  51,  55,  58,  62,  59,  63,  112, 116, 113, 117,
  120, 124, 121, 125, 114, 118, 115, 119, 122, 126, 123, 127, 160, 164, 161,
  165, 168, 172, 169, 173, 162, 166, 163, 167, 170, 174, 171, 175, 224, 228,
  225, 229, 232, 236, 233, 237, 226, 230, 227, 231, 234, 238, 235, 239, 176,
  180, 177, 181, 184, 188, 185, 189, 178, 182, 179, 183, 186, 190, 187, 191,
  240, 244, 241, 245, 248, 252, 249, 253, 242, 246, 243, 247, 250, 254, 251,
  255};

const uint8_t pcc::kOccMapRotateX090[256] = {
  0,   2,   8,   10,  1,   3,   9,   11,  4,   6,   12,  14,  5,   7,   13,
  15,  32,  34,  40,  42,  33,  35,  41,  43,  36,  38,  44,  46,  37,  39,
  45,  47,  128, 130, 136, 138, 129, 131, 137, 139, 132, 134, 140, 142, 133,
  135, 141, 143, 160, 162, 168, 170, 161, 163, 169, 171, 164, 166, 172, 174,
  165, 167, 173, 175, 16,  18,  24,  26,  17,  19,  25,  27,  20,  22,  28,
  30,  21,  23,  29,  31,  48,  50,  56,  58,  49,  51,  57,  59,  52,  54,
  60,  62,  53,  55,  61,  63,  144, 146, 152, 154, 145, 147, 153, 155, 148,
  150, 156, 158, 149, 151, 157, 159, 176, 178, 184, 186, 177, 179, 185, 187,
  180, 182, 188, 190, 181, 183, 189, 191, 64,  66,  72,  74,  65,  67,  73,
  75,  68,  70,  76,  78,  69,  71,  77,  79,  96,  98,  104, 106, 97,  99,
  105, 107, 100, 102, 108, 110, 101, 103, 109, 111, 192, 194, 200, 202, 193,
  195, 201, 203, 196, 198, 204, 206, 197, 199, 205, 207, 224, 226, 232, 234,
  225, 227, 233, 235, 228, 230, 236, 238, 229, 231, 237, 239, 80,  82,  88,
  90,  81,  83,  89,  91,  84,  86,  92,  94,  85,  87,  93,  95,  112, 114,
  120, 122, 113, 115, 121, 123, 116, 118, 124, 126, 117, 119, 125, 127, 208,
  210, 216, 218, 209, 211, 217, 219, 212, 214, 220, 222, 213, 215, 221, 223,
  240, 242, 248, 250, 241, 243, 249, 251, 244, 246, 252, 254, 245, 247, 253,
  255};

const uint8_t pcc::kOccMapRotateX270Y180[256] = {
  0,  128, 32, 160, 64, 192, 96,  224, 16, 144, 48, 176, 80, 208, 112, 240,
  8,  136, 40, 168, 72, 200, 104, 232, 24, 152, 56, 184, 88, 216, 120, 248,
  2,  130, 34, 162, 66, 194, 98,  226, 18, 146, 50, 178, 82, 210, 114, 242,
  10, 138, 42, 170, 74, 202, 106, 234, 26, 154, 58, 186, 90, 218, 122, 250,
  4,  132, 36, 164, 68, 196, 100, 228, 20, 148, 52, 180, 84, 212, 116, 244,
  12, 140, 44, 172, 76, 204, 108, 236, 28, 156, 60, 188, 92, 220, 124, 252,
  6,  134, 38, 166, 70, 198, 102, 230, 22, 150, 54, 182, 86, 214, 118, 246,
  14, 142, 46, 174, 78, 206, 110, 238, 30, 158, 62, 190, 94, 222, 126, 254,
  1,  129, 33, 161, 65, 193, 97,  225, 17, 145, 49, 177, 81, 209, 113, 241,
  9,  137, 41, 169, 73, 201, 105, 233, 25, 153, 57, 185, 89, 217, 121, 249,
  3,  131, 35, 163, 67, 195, 99,  227, 19, 147, 51, 179, 83, 211, 115, 243,
  11, 139, 43, 171, 75, 203, 107, 235, 27, 155, 59, 187, 91, 219, 123, 251,
  5,  133, 37, 165, 69, 197, 101, 229, 21, 149, 53, 181, 85, 213, 117, 245,
  13, 141, 45, 173, 77, 205, 109, 237, 29, 157, 61, 189, 93, 221, 125, 253,
  7,  135, 39, 167, 71, 199, 103, 231, 23, 151, 55, 183, 87, 215, 119, 247,
  15, 143, 47, 175, 79, 207, 111, 239, 31, 159, 63, 191, 95, 223, 127, 255};

const uint8_t pcc::kOccMapRotateX090Y180[256] = {
  0,  16, 64, 80, 32, 48, 96,  112, 128, 144, 192, 208, 160, 176, 224, 240,
  1,  17, 65, 81, 33, 49, 97,  113, 129, 145, 193, 209, 161, 177, 225, 241,
  4,  20, 68, 84, 36, 52, 100, 116, 132, 148, 196, 212, 164, 180, 228, 244,
  5,  21, 69, 85, 37, 53, 101, 117, 133, 149, 197, 213, 165, 181, 229, 245,
  2,  18, 66, 82, 34, 50, 98,  114, 130, 146, 194, 210, 162, 178, 226, 242,
  3,  19, 67, 83, 35, 51, 99,  115, 131, 147, 195, 211, 163, 179, 227, 243,
  6,  22, 70, 86, 38, 54, 102, 118, 134, 150, 198, 214, 166, 182, 230, 246,
  7,  23, 71, 87, 39, 55, 103, 119, 135, 151, 199, 215, 167, 183, 231, 247,
  8,  24, 72, 88, 40, 56, 104, 120, 136, 152, 200, 216, 168, 184, 232, 248,
  9,  25, 73, 89, 41, 57, 105, 121, 137, 153, 201, 217, 169, 185, 233, 249,
  12, 28, 76, 92, 44, 60, 108, 124, 140, 156, 204, 220, 172, 188, 236, 252,
  13, 29, 77, 93, 45, 61, 109, 125, 141, 157, 205, 221, 173, 189, 237, 253,
  10, 26, 74, 90, 42, 58, 106, 122, 138, 154, 202, 218, 170, 186, 234, 250,
  11, 27, 75, 91, 43, 59, 107, 123, 139, 155, 203, 219, 171, 187, 235, 251,
  14, 30, 78, 94, 46, 62, 110, 126, 142, 158, 206, 222, 174, 190, 238, 254,
  15, 31, 79, 95, 47, 63, 111, 127, 143, 159, 207, 223, 175, 191, 239, 255};

const uint8_t pcc::kOccMapRotateY090[256] = {
  0,   16,  1,   17,  64,  80,  65,  81,  4,   20,  5,   21,  68,  84,  69,
  85,  32,  48,  33,  49,  96,  112, 97,  113, 36,  52,  37,  53,  100, 116,
  101, 117, 2,   18,  3,   19,  66,  82,  67,  83,  6,   22,  7,   23,  70,
  86,  71,  87,  34,  50,  35,  51,  98,  114, 99,  115, 38,  54,  39,  55,
  102, 118, 103, 119, 128, 144, 129, 145, 192, 208, 193, 209, 132, 148, 133,
  149, 196, 212, 197, 213, 160, 176, 161, 177, 224, 240, 225, 241, 164, 180,
  165, 181, 228, 244, 229, 245, 130, 146, 131, 147, 194, 210, 195, 211, 134,
  150, 135, 151, 198, 214, 199, 215, 162, 178, 163, 179, 226, 242, 227, 243,
  166, 182, 167, 183, 230, 246, 231, 247, 8,   24,  9,   25,  72,  88,  73,
  89,  12,  28,  13,  29,  76,  92,  77,  93,  40,  56,  41,  57,  104, 120,
  105, 121, 44,  60,  45,  61,  108, 124, 109, 125, 10,  26,  11,  27,  74,
  90,  75,  91,  14,  30,  15,  31,  78,  94,  79,  95,  42,  58,  43,  59,
  106, 122, 107, 123, 46,  62,  47,  63,  110, 126, 111, 127, 136, 152, 137,
  153, 200, 216, 201, 217, 140, 156, 141, 157, 204, 220, 205, 221, 168, 184,
  169, 185, 232, 248, 233, 249, 172, 188, 173, 189, 236, 252, 237, 253, 138,
  154, 139, 155, 202, 218, 203, 219, 142, 158, 143, 159, 206, 222, 207, 223,
  170, 186, 171, 187, 234, 250, 235, 251, 174, 190, 175, 191, 238, 254, 239,
  255};

const uint8_t pcc::kOccMapRotateY270[256] = {
  0,  2,  32,  34,  8,  10, 40,  42,  128, 130, 160, 162, 136, 138, 168, 170,
  1,  3,  33,  35,  9,  11, 41,  43,  129, 131, 161, 163, 137, 139, 169, 171,
  16, 18, 48,  50,  24, 26, 56,  58,  144, 146, 176, 178, 152, 154, 184, 186,
  17, 19, 49,  51,  25, 27, 57,  59,  145, 147, 177, 179, 153, 155, 185, 187,
  4,  6,  36,  38,  12, 14, 44,  46,  132, 134, 164, 166, 140, 142, 172, 174,
  5,  7,  37,  39,  13, 15, 45,  47,  133, 135, 165, 167, 141, 143, 173, 175,
  20, 22, 52,  54,  28, 30, 60,  62,  148, 150, 180, 182, 156, 158, 188, 190,
  21, 23, 53,  55,  29, 31, 61,  63,  149, 151, 181, 183, 157, 159, 189, 191,
  64, 66, 96,  98,  72, 74, 104, 106, 192, 194, 224, 226, 200, 202, 232, 234,
  65, 67, 97,  99,  73, 75, 105, 107, 193, 195, 225, 227, 201, 203, 233, 235,
  80, 82, 112, 114, 88, 90, 120, 122, 208, 210, 240, 242, 216, 218, 248, 250,
  81, 83, 113, 115, 89, 91, 121, 123, 209, 211, 241, 243, 217, 219, 249, 251,
  68, 70, 100, 102, 76, 78, 108, 110, 196, 198, 228, 230, 204, 206, 236, 238,
  69, 71, 101, 103, 77, 79, 109, 111, 197, 199, 229, 231, 205, 207, 237, 239,
  84, 86, 116, 118, 92, 94, 124, 126, 212, 214, 244, 246, 220, 222, 252, 254,
  85, 87, 117, 119, 93, 95, 125, 127, 213, 215, 245, 247, 221, 223, 253, 255};

const uint8_t pcc::kOccMapMirrorXY[256] = {
  0,   2,   1,   3,   8,   10,  9,   11,  4,   6,   5,   7,   12,  14,  13,
  15,  32,  34,  33,  35,  40,  42,  41,  43,  36,  38,  37,  39,  44,  46,
  45,  47,  16,  18,  17,  19,  24,  26,  25,  27,  20,  22,  21,  23,  28,
  30,  29,  31,  48,  50,  49,  51,  56,  58,  57,  59,  52,  54,  53,  55,
  60,  62,  61,  63,  128, 130, 129, 131, 136, 138, 137, 139, 132, 134, 133,
  135, 140, 142, 141, 143, 160, 162, 161, 163, 168, 170, 169, 171, 164, 166,
  165, 167, 172, 174, 173, 175, 144, 146, 145, 147, 152, 154, 153, 155, 148,
  150, 149, 151, 156, 158, 157, 159, 176, 178, 177, 179, 184, 186, 185, 187,
  180, 182, 181, 183, 188, 190, 189, 191, 64,  66,  65,  67,  72,  74,  73,
  75,  68,  70,  69,  71,  76,  78,  77,  79,  96,  98,  97,  99,  104, 106,
  105, 107, 100, 102, 101, 103, 108, 110, 109, 111, 80,  82,  81,  83,  88,
  90,  89,  91,  84,  86,  85,  87,  92,  94,  93,  95,  112, 114, 113, 115,
  120, 122, 121, 123, 116, 118, 117, 119, 124, 126, 125, 127, 192, 194, 193,
  195, 200, 202, 201, 203, 196, 198, 197, 199, 204, 206, 205, 207, 224, 226,
  225, 227, 232, 234, 233, 235, 228, 230, 229, 231, 236, 238, 237, 239, 208,
  210, 209, 211, 216, 218, 217, 219, 212, 214, 213, 215, 220, 222, 221, 223,
  240, 242, 241, 243, 248, 250, 249, 251, 244, 246, 245, 247, 252, 254, 253,
  255};

const uint8_t pcc::kOccMapRotateZ270[256] = {
  0,   16,  32,  48,  1,   17,  33,  49,  2,   18,  34,  50,  3,   19,  35,
  51,  64,  80,  96,  112, 65,  81,  97,  113, 66,  82,  98,  114, 67,  83,
  99,  115, 128, 144, 160, 176, 129, 145, 161, 177, 130, 146, 162, 178, 131,
  147, 163, 179, 192, 208, 224, 240, 193, 209, 225, 241, 194, 210, 226, 242,
  195, 211, 227, 243, 4,   20,  36,  52,  5,   21,  37,  53,  6,   22,  38,
  54,  7,   23,  39,  55,  68,  84,  100, 116, 69,  85,  101, 117, 70,  86,
  102, 118, 71,  87,  103, 119, 132, 148, 164, 180, 133, 149, 165, 181, 134,
  150, 166, 182, 135, 151, 167, 183, 196, 212, 228, 244, 197, 213, 229, 245,
  198, 214, 230, 246, 199, 215, 231, 247, 8,   24,  40,  56,  9,   25,  41,
  57,  10,  26,  42,  58,  11,  27,  43,  59,  72,  88,  104, 120, 73,  89,
  105, 121, 74,  90,  106, 122, 75,  91,  107, 123, 136, 152, 168, 184, 137,
  153, 169, 185, 138, 154, 170, 186, 139, 155, 171, 187, 200, 216, 232, 248,
  201, 217, 233, 249, 202, 218, 234, 250, 203, 219, 235, 251, 12,  28,  44,
  60,  13,  29,  45,  61,  14,  30,  46,  62,  15,  31,  47,  63,  76,  92,
  108, 124, 77,  93,  109, 125, 78,  94,  110, 126, 79,  95,  111, 127, 140,
  156, 172, 188, 141, 157, 173, 189, 142, 158, 174, 190, 143, 159, 175, 191,
  204, 220, 236, 252, 205, 221, 237, 253, 206, 222, 238, 254, 207, 223, 239,
  255};

const uint8_t pcc::kOccMapRotateZ180[256] = {
  0,  64, 128, 192, 16, 80, 144, 208, 32, 96,  160, 224, 48, 112, 176, 240,
  4,  68, 132, 196, 20, 84, 148, 212, 36, 100, 164, 228, 52, 116, 180, 244,
  8,  72, 136, 200, 24, 88, 152, 216, 40, 104, 168, 232, 56, 120, 184, 248,
  12, 76, 140, 204, 28, 92, 156, 220, 44, 108, 172, 236, 60, 124, 188, 252,
  1,  65, 129, 193, 17, 81, 145, 209, 33, 97,  161, 225, 49, 113, 177, 241,
  5,  69, 133, 197, 21, 85, 149, 213, 37, 101, 165, 229, 53, 117, 181, 245,
  9,  73, 137, 201, 25, 89, 153, 217, 41, 105, 169, 233, 57, 121, 185, 249,
  13, 77, 141, 205, 29, 93, 157, 221, 45, 109, 173, 237, 61, 125, 189, 253,
  2,  66, 130, 194, 18, 82, 146, 210, 34, 98,  162, 226, 50, 114, 178, 242,
  6,  70, 134, 198, 22, 86, 150, 214, 38, 102, 166, 230, 54, 118, 182, 246,
  10, 74, 138, 202, 26, 90, 154, 218, 42, 106, 170, 234, 58, 122, 186, 250,
  14, 78, 142, 206, 30, 94, 158, 222, 46, 110, 174, 238, 62, 126, 190, 254,
  3,  67, 131, 195, 19, 83, 147, 211, 35, 99,  163, 227, 51, 115, 179, 243,
  7,  71, 135, 199, 23, 87, 151, 215, 39, 103, 167, 231, 55, 119, 183, 247,
  11, 75, 139, 203, 27, 91, 155, 219, 43, 107, 171, 235, 59, 123, 187, 251,
  15, 79, 143, 207, 31, 95, 159, 223, 47, 111, 175, 239, 63, 127, 191, 255};

const uint8_t pcc::kOccMapRotateZ090[256] = {
  0,  4,  8,  12, 64,  68,  72,  76,  128, 132, 136, 140, 192, 196, 200, 204,
  1,  5,  9,  13, 65,  69,  73,  77,  129, 133, 137, 141, 193, 197, 201, 205,
  2,  6,  10, 14, 66,  70,  74,  78,  130, 134, 138, 142, 194, 198, 202, 206,
  3,  7,  11, 15, 67,  71,  75,  79,  131, 135, 139, 143, 195, 199, 203, 207,
  16, 20, 24, 28, 80,  84,  88,  92,  144, 148, 152, 156, 208, 212, 216, 220,
  17, 21, 25, 29, 81,  85,  89,  93,  145, 149, 153, 157, 209, 213, 217, 221,
  18, 22, 26, 30, 82,  86,  90,  94,  146, 150, 154, 158, 210, 214, 218, 222,
  19, 23, 27, 31, 83,  87,  91,  95,  147, 151, 155, 159, 211, 215, 219, 223,
  32, 36, 40, 44, 96,  100, 104, 108, 160, 164, 168, 172, 224, 228, 232, 236,
  33, 37, 41, 45, 97,  101, 105, 109, 161, 165, 169, 173, 225, 229, 233, 237,
  34, 38, 42, 46, 98,  102, 106, 110, 162, 166, 170, 174, 226, 230, 234, 238,
  35, 39, 43, 47, 99,  103, 107, 111, 163, 167, 171, 175, 227, 231, 235, 239,
  48, 52, 56, 60, 112, 116, 120, 124, 176, 180, 184, 188, 240, 244, 248, 252,
  49, 53, 57, 61, 113, 117, 121, 125, 177, 181, 185, 189, 241, 245, 249, 253,
  50, 54, 58, 62, 114, 118, 122, 126, 178, 182, 186, 190, 242, 246, 250, 254,
  51, 55, 59, 63, 115, 119, 123, 127, 179, 183, 187, 191, 243, 247, 251, 255};

//============================================================================

const int8_t pcc::kOccBitCodingOrder[8] = {1, 7, 5, 3, 2, 6, 4, 0};

//============================================================================

// Generated from (L*p+s)/(L+1), L=min(200, max(5, 1/p, 1/(1-p))
const uint8_t pcc::kCtxMapOctreeOccupancyDelta[16] = {
  0, 1, 1, 2, 4, 7, 9, 11, 14, 16, 19, 23, 22, 18, 13, 6};

//============================================================================

const uint8_t pcc::kDualLutOccupancyCoderInit[9][32] = {
  {5, 17, 34, 68, 160, 136, 12, 80, 192, 21, 10, 48, 3, 170, 168, 162, 204, 85, 14, 81, 35, 69, 84, 176, 51, 65, 138, 200, 212, 11, 50, 15},
  {85, 255, 170, 64, 80, 252, 223, 84, 117, 68, 247, 221, 4, 192, 128, 174, 253, 204, 240, 69, 127, 213, 5, 119, 238, 175, 160, 87, 136, 16, 244, 23},
  {128, 32, 64, 16, 192, 80, 160, 48, 68, 8, 136, 176, 2, 240, 144, 17, 208, 224, 112, 19, 255, 85, 51, 170, 84, 162, 238, 204, 1, 76, 138, 187},
  {64, 128, 192, 204, 136, 68, 170, 200, 85, 196, 255, 4, 8, 80, 160, 240, 208, 76, 221, 140, 244, 72, 93, 168, 250, 32, 252, 187, 223, 238, 243, 84},
  {85, 170, 255, 119, 127, 254, 87, 223, 95, 117, 245, 213, 247, 93, 234, 69, 238, 21, 221, 191, 253, 187, 16, 251, 171, 17, 5, 174, 125, 239, 12, 241},
  {16, 64, 17, 80, 128, 68, 32, 85, 81, 84, 192, 48, 51, 4, 34, 240, 1, 136, 170, 255, 204, 196, 160, 12, 208, 69, 191, 119, 21, 95, 2, 206},
  {170, 10, 42, 8, 138, 15, 255, 2, 14, 136, 11, 175, 32, 238, 47, 191, 34, 239, 245, 174, 3, 63, 95, 223, 253, 168, 142, 246, 206, 13, 162, 250},
  {170, 255, 128, 160, 136, 168, 204, 240, 250, 192, 238, 162, 234, 223, 138, 254, 10, 186, 8, 251, 2, 127, 125, 247, 85, 171, 32, 197, 221, 87, 42, 239},
  {255, 223, 239, 251, 127, 247, 119, 253, 63, 191, 221, 254, 238, 95, 175, 240, 85, 187, 244, 250, 170, 245, 117, 34, 126, 51, 93, 243, 207, 234, 59, 236},
};

//============================================================================

const uint32_t pcc::kMortonCode256Z[256] = {
  0x00000000, 0x00000001, 0x00000008, 0x00000009, 0x00000040, 0x00000041,
  0x00000048, 0x00000049, 0x00000200, 0x00000201, 0x00000208, 0x00000209,
  0x00000240, 0x00000241, 0x00000248, 0x00000249, 0x00001000, 0x00001001,
  0x00001008, 0x00001009, 0x00001040, 0x00001041, 0x00001048, 0x00001049,
  0x00001200, 0x00001201, 0x00001208, 0x00001209, 0x00001240, 0x00001241,
  0x00001248, 0x00001249, 0x00008000, 0x00008001, 0x00008008, 0x00008009,
  0x00008040, 0x00008041, 0x00008048, 0x00008049, 0x00008200, 0x00008201,
  0x00008208, 0x00008209, 0x00008240, 0x00008241, 0x00008248, 0x00008249,
  0x00009000, 0x00009001, 0x00009008, 0x00009009, 0x00009040, 0x00009041,
  0x00009048, 0x00009049, 0x00009200, 0x00009201, 0x00009208, 0x00009209,
  0x00009240, 0x00009241, 0x00009248, 0x00009249, 0x00040000, 0x00040001,
  0x00040008, 0x00040009, 0x00040040, 0x00040041, 0x00040048, 0x00040049,
  0x00040200, 0x00040201, 0x00040208, 0x00040209, 0x00040240, 0x00040241,
  0x00040248, 0x00040249, 0x00041000, 0x00041001, 0x00041008, 0x00041009,
  0x00041040, 0x00041041, 0x00041048, 0x00041049, 0x00041200, 0x00041201,
  0x00041208, 0x00041209, 0x00041240, 0x00041241, 0x00041248, 0x00041249,
  0x00048000, 0x00048001, 0x00048008, 0x00048009, 0x00048040, 0x00048041,
  0x00048048, 0x00048049, 0x00048200, 0x00048201, 0x00048208, 0x00048209,
  0x00048240, 0x00048241, 0x00048248, 0x00048249, 0x00049000, 0x00049001,
  0x00049008, 0x00049009, 0x00049040, 0x00049041, 0x00049048, 0x00049049,
  0x00049200, 0x00049201, 0x00049208, 0x00049209, 0x00049240, 0x00049241,
  0x00049248, 0x00049249, 0x00200000, 0x00200001, 0x00200008, 0x00200009,
  0x00200040, 0x00200041, 0x00200048, 0x00200049, 0x00200200, 0x00200201,
  0x00200208, 0x00200209, 0x00200240, 0x00200241, 0x00200248, 0x00200249,
  0x00201000, 0x00201001, 0x00201008, 0x00201009, 0x00201040, 0x00201041,
  0x00201048, 0x00201049, 0x00201200, 0x00201201, 0x00201208, 0x00201209,
  0x00201240, 0x00201241, 0x00201248, 0x00201249, 0x00208000, 0x00208001,
  0x00208008, 0x00208009, 0x00208040, 0x00208041, 0x00208048, 0x00208049,
  0x00208200, 0x00208201, 0x00208208, 0x00208209, 0x00208240, 0x00208241,
  0x00208248, 0x00208249, 0x00209000, 0x00209001, 0x00209008, 0x00209009,
  0x00209040, 0x00209041, 0x00209048, 0x00209049, 0x00209200, 0x00209201,
  0x00209208, 0x00209209, 0x00209240, 0x00209241, 0x00209248, 0x00209249,
  0x00240000, 0x00240001, 0x00240008, 0x00240009, 0x00240040, 0x00240041,
  0x00240048, 0x00240049, 0x00240200, 0x00240201, 0x00240208, 0x00240209,
  0x00240240, 0x00240241, 0x00240248, 0x00240249, 0x00241000, 0x00241001,
  0x00241008, 0x00241009, 0x00241040, 0x00241041, 0x00241048, 0x00241049,
  0x00241200, 0x00241201, 0x00241208, 0x00241209, 0x00241240, 0x00241241,
  0x00241248, 0x00241249, 0x00248000, 0x00248001, 0x00248008, 0x00248009,
  0x00248040, 0x00248041, 0x00248048, 0x00248049, 0x00248200, 0x00248201,
  0x00248208, 0x00248209, 0x00248240, 0x00248241, 0x00248248, 0x00248249,
  0x00249000, 0x00249001, 0x00249008, 0x00249009, 0x00249040, 0x00249041,
  0x00249048, 0x00249049, 0x00249200, 0x00249201, 0x00249208, 0x00249209,
  0x00249240, 0x00249241, 0x00249248, 0x00249249};

const uint32_t pcc::kMortonCode256Y[256] = {
  0x00000000, 0x00000002, 0x00000010, 0x00000012, 0x00000080, 0x00000082,
  0x00000090, 0x00000092, 0x00000400, 0x00000402, 0x00000410, 0x00000412,
  0x00000480, 0x00000482, 0x00000490, 0x00000492, 0x00002000, 0x00002002,
  0x00002010, 0x00002012, 0x00002080, 0x00002082, 0x00002090, 0x00002092,
  0x00002400, 0x00002402, 0x00002410, 0x00002412, 0x00002480, 0x00002482,
  0x00002490, 0x00002492, 0x00010000, 0x00010002, 0x00010010, 0x00010012,
  0x00010080, 0x00010082, 0x00010090, 0x00010092, 0x00010400, 0x00010402,
  0x00010410, 0x00010412, 0x00010480, 0x00010482, 0x00010490, 0x00010492,
  0x00012000, 0x00012002, 0x00012010, 0x00012012, 0x00012080, 0x00012082,
  0x00012090, 0x00012092, 0x00012400, 0x00012402, 0x00012410, 0x00012412,
  0x00012480, 0x00012482, 0x00012490, 0x00012492, 0x00080000, 0x00080002,
  0x00080010, 0x00080012, 0x00080080, 0x00080082, 0x00080090, 0x00080092,
  0x00080400, 0x00080402, 0x00080410, 0x00080412, 0x00080480, 0x00080482,
  0x00080490, 0x00080492, 0x00082000, 0x00082002, 0x00082010, 0x00082012,
  0x00082080, 0x00082082, 0x00082090, 0x00082092, 0x00082400, 0x00082402,
  0x00082410, 0x00082412, 0x00082480, 0x00082482, 0x00082490, 0x00082492,
  0x00090000, 0x00090002, 0x00090010, 0x00090012, 0x00090080, 0x00090082,
  0x00090090, 0x00090092, 0x00090400, 0x00090402, 0x00090410, 0x00090412,
  0x00090480, 0x00090482, 0x00090490, 0x00090492, 0x00092000, 0x00092002,
  0x00092010, 0x00092012, 0x00092080, 0x00092082, 0x00092090, 0x00092092,
  0x00092400, 0x00092402, 0x00092410, 0x00092412, 0x00092480, 0x00092482,
  0x00092490, 0x00092492, 0x00400000, 0x00400002, 0x00400010, 0x00400012,
  0x00400080, 0x00400082, 0x00400090, 0x00400092, 0x00400400, 0x00400402,
  0x00400410, 0x00400412, 0x00400480, 0x00400482, 0x00400490, 0x00400492,
  0x00402000, 0x00402002, 0x00402010, 0x00402012, 0x00402080, 0x00402082,
  0x00402090, 0x00402092, 0x00402400, 0x00402402, 0x00402410, 0x00402412,
  0x00402480, 0x00402482, 0x00402490, 0x00402492, 0x00410000, 0x00410002,
  0x00410010, 0x00410012, 0x00410080, 0x00410082, 0x00410090, 0x00410092,
  0x00410400, 0x00410402, 0x00410410, 0x00410412, 0x00410480, 0x00410482,
  0x00410490, 0x00410492, 0x00412000, 0x00412002, 0x00412010, 0x00412012,
  0x00412080, 0x00412082, 0x00412090, 0x00412092, 0x00412400, 0x00412402,
  0x00412410, 0x00412412, 0x00412480, 0x00412482, 0x00412490, 0x00412492,
  0x00480000, 0x00480002, 0x00480010, 0x00480012, 0x00480080, 0x00480082,
  0x00480090, 0x00480092, 0x00480400, 0x00480402, 0x00480410, 0x00480412,
  0x00480480, 0x00480482, 0x00480490, 0x00480492, 0x00482000, 0x00482002,
  0x00482010, 0x00482012, 0x00482080, 0x00482082, 0x00482090, 0x00482092,
  0x00482400, 0x00482402, 0x00482410, 0x00482412, 0x00482480, 0x00482482,
  0x00482490, 0x00482492, 0x00490000, 0x00490002, 0x00490010, 0x00490012,
  0x00490080, 0x00490082, 0x00490090, 0x00490092, 0x00490400, 0x00490402,
  0x00490410, 0x00490412, 0x00490480, 0x00490482, 0x00490490, 0x00490492,
  0x00492000, 0x00492002, 0x00492010, 0x00492012, 0x00492080, 0x00492082,
  0x00492090, 0x00492092, 0x00492400, 0x00492402, 0x00492410, 0x00492412,
  0x00492480, 0x00492482, 0x00492490, 0x00492492};

const uint32_t pcc::kMortonCode256X[256] = {
  0x00000000, 0x00000004, 0x00000020, 0x00000024, 0x00000100, 0x00000104,
  0x00000120, 0x00000124, 0x00000800, 0x00000804, 0x00000820, 0x00000824,
  0x00000900, 0x00000904, 0x00000920, 0x00000924, 0x00004000, 0x00004004,
  0x00004020, 0x00004024, 0x00004100, 0x00004104, 0x00004120, 0x00004124,
  0x00004800, 0x00004804, 0x00004820, 0x00004824, 0x00004900, 0x00004904,
  0x00004920, 0x00004924, 0x00020000, 0x00020004, 0x00020020, 0x00020024,
  0x00020100, 0x00020104, 0x00020120, 0x00020124, 0x00020800, 0x00020804,
  0x00020820, 0x00020824, 0x00020900, 0x00020904, 0x00020920, 0x00020924,
  0x00024000, 0x00024004, 0x00024020, 0x00024024, 0x00024100, 0x00024104,
  0x00024120, 0x00024124, 0x00024800, 0x00024804, 0x00024820, 0x00024824,
  0x00024900, 0x00024904, 0x00024920, 0x00024924, 0x00100000, 0x00100004,
  0x00100020, 0x00100024, 0x00100100, 0x00100104, 0x00100120, 0x00100124,
  0x00100800, 0x00100804, 0x00100820, 0x00100824, 0x00100900, 0x00100904,
  0x00100920, 0x00100924, 0x00104000, 0x00104004, 0x00104020, 0x00104024,
  0x00104100, 0x00104104, 0x00104120, 0x00104124, 0x00104800, 0x00104804,
  0x00104820, 0x00104824, 0x00104900, 0x00104904, 0x00104920, 0x00104924,
  0x00120000, 0x00120004, 0x00120020, 0x00120024, 0x00120100, 0x00120104,
  0x00120120, 0x00120124, 0x00120800, 0x00120804, 0x00120820, 0x00120824,
  0x00120900, 0x00120904, 0x00120920, 0x00120924, 0x00124000, 0x00124004,
  0x00124020, 0x00124024, 0x00124100, 0x00124104, 0x00124120, 0x00124124,
  0x00124800, 0x00124804, 0x00124820, 0x00124824, 0x00124900, 0x00124904,
  0x00124920, 0x00124924, 0x00800000, 0x00800004, 0x00800020, 0x00800024,
  0x00800100, 0x00800104, 0x00800120, 0x00800124, 0x00800800, 0x00800804,
  0x00800820, 0x00800824, 0x00800900, 0x00800904, 0x00800920, 0x00800924,
  0x00804000, 0x00804004, 0x00804020, 0x00804024, 0x00804100, 0x00804104,
  0x00804120, 0x00804124, 0x00804800, 0x00804804, 0x00804820, 0x00804824,
  0x00804900, 0x00804904, 0x00804920, 0x00804924, 0x00820000, 0x00820004,
  0x00820020, 0x00820024, 0x00820100, 0x00820104, 0x00820120, 0x00820124,
  0x00820800, 0x00820804, 0x00820820, 0x00820824, 0x00820900, 0x00820904,
  0x00820920, 0x00820924, 0x00824000, 0x00824004, 0x00824020, 0x00824024,
  0x00824100, 0x00824104, 0x00824120, 0x00824124, 0x00824800, 0x00824804,
  0x00824820, 0x00824824, 0x00824900, 0x00824904, 0x00824920, 0x00824924,
  0x00900000, 0x00900004, 0x00900020, 0x00900024, 0x00900100, 0x00900104,
  0x00900120, 0x00900124, 0x00900800, 0x00900804, 0x00900820, 0x00900824,
  0x00900900, 0x00900904, 0x00900920, 0x00900924, 0x00904000, 0x00904004,
  0x00904020, 0x00904024, 0x00904100, 0x00904104, 0x00904120, 0x00904124,
  0x00904800, 0x00904804, 0x00904820, 0x00904824, 0x00904900, 0x00904904,
  0x00904920, 0x00904924, 0x00920000, 0x00920004, 0x00920020, 0x00920024,
  0x00920100, 0x00920104, 0x00920120, 0x00920124, 0x00920800, 0x00920804,
  0x00920820, 0x00920824, 0x00920900, 0x00920904, 0x00920920, 0x00920924,
  0x00924000, 0x00924004, 0x00924020, 0x00924024, 0x00924100, 0x00924104,
  0x00924120, 0x00924124, 0x00924800, 0x00924804, 0x00924820, 0x00924824,
  0x00924900, 0x00924904, 0x00924920, 0x00924924};

//============================================================================

const int16_t pcc::kQpStep[6] = {161, 181, 203, 228, 256, 287};

const int32_t pcc::kQpStepRecip[6] = {416825, 370767, 330586,
                                      294337, 262144, 233829};

//============================================================================

const int32_t pcc::kISine[1026] = {
  0,        25736,    51472,    77208,    102943,   128678,   154413,
  180148,   205882,   231616,   257349,   283082,   308814,   334545,
  360275,   386005,   411733,   437461,   463188,   488913,   514638,
  540361,   566083,   591804,   617523,   643240,   668957,   694671,
  720384,   746096,   771805,   797513,   823219,   848923,   874625,
  900325,   926023,   951718,   977411,   1003103,  1028791,  1054478,
  1080161,  1105843,  1131521,  1157197,  1182870,  1208541,  1234209,
  1259873,  1285535,  1311194,  1336849,  1362502,  1388151,  1413797,
  1439440,  1465079,  1490715,  1516348,  1541976,  1567602,  1593223,
  1618841,  1644455,  1670065,  1695671,  1721273,  1746871,  1772465,
  1798055,  1823640,  1849222,  1874799,  1900371,  1925939,  1951503,
  1977062,  2002616,  2028166,  2053710,  2079250,  2104785,  2130315,
  2155841,  2181361,  2206875,  2232385,  2257890,  2283389,  2308883,
  2334371,  2359854,  2385331,  2410803,  2436269,  2461729,  2487183,
  2512632,  2538075,  2563511,  2588942,  2614367,  2639785,  2665197,
  2690603,  2716003,  2741396,  2766783,  2792163,  2817537,  2842904,
  2868265,  2893618,  2918965,  2944305,  2969638,  2994964,  3020283,
  3045595,  3070900,  3096197,  3121487,  3146770,  3172046,  3197314,
  3222574,  3247827,  3273072,  3298310,  3323540,  3348762,  3373976,
  3399182,  3424380,  3449570,  3474752,  3499926,  3525092,  3550249,
  3575398,  3600538,  3625670,  3650794,  3675909,  3701015,  3726113,
  3751201,  3776281,  3801352,  3826415,  3851468,  3876512,  3901547,
  3926572,  3951589,  3976596,  4001594,  4026583,  4051562,  4076531,
  4101491,  4126441,  4151381,  4176312,  4201233,  4226144,  4251045,
  4275936,  4300817,  4325688,  4350549,  4375399,  4400239,  4425069,
  4449889,  4474698,  4499496,  4524284,  4549061,  4573827,  4598583,
  4623328,  4648062,  4672785,  4697497,  4722198,  4746888,  4771567,
  4796234,  4820890,  4845535,  4870169,  4894791,  4919401,  4944000,
  4968587,  4993163,  5017727,  5042279,  5066819,  5091347,  5115864,
  5140368,  5164860,  5189340,  5213808,  5238263,  5262706,  5287137,
  5311555,  5335961,  5360355,  5384735,  5409103,  5433459,  5457801,
  5482131,  5506447,  5530751,  5555042,  5579320,  5603584,  5627836,
  5652074,  5676299,  5700510,  5724708,  5748893,  5773064,  5797221,
  5821365,  5845495,  5869612,  5893714,  5917803,  5941878,  5965939,
  5989986,  6014018,  6038037,  6062041,  6086031,  6110007,  6133968,
  6157915,  6181848,  6205765,  6229669,  6253557,  6277431,  6301290,
  6325135,  6348964,  6372779,  6396578,  6420363,  6444132,  6467886,
  6491625,  6515349,  6539057,  6562750,  6586428,  6610090,  6633736,
  6657367,  6680982,  6704582,  6728165,  6751733,  6775285,  6798821,
  6822341,  6845845,  6869333,  6892805,  6916260,  6939699,  6963122,
  6986529,  7009919,  7033292,  7056649,  7079990,  7103313,  7126620,
  7149911,  7173184,  7196441,  7219680,  7242903,  7266109,  7289297,
  7312468,  7335623,  7358759,  7381879,  7404981,  7428066,  7451133,
  7474183,  7497215,  7520230,  7543226,  7566205,  7589167,  7612110,
  7635036,  7657943,  7680833,  7703704,  7726557,  7749393,  7772209,
  7795008,  7817788,  7840550,  7863294,  7886019,  7908725,  7931413,
  7954082,  7976732,  7999364,  8021976,  8044570,  8067145,  8089701,
  8112238,  8134756,  8157255,  8179734,  8202195,  8224636,  8247057,
  8269459,  8291842,  8314205,  8336549,  8358873,  8381178,  8403462,
  8425727,  8447972,  8470197,  8492403,  8514588,  8536753,  8558898,
  8581023,  8603128,  8625213,  8647277,  8669321,  8691345,  8713348,
  8735330,  8757292,  8779234,  8801154,  8823054,  8844934,  8866792,
  8888630,  8910447,  8932242,  8954017,  8975771,  8997503,  9019214,
  9040905,  9062573,  9084221,  9105847,  9127452,  9149035,  9170597,
  9192137,  9213655,  9235152,  9256627,  9278081,  9299512,  9320922,
  9342309,  9363675,  9385019,  9406340,  9427640,  9448917,  9470172,
  9491405,  9512615,  9533803,  9554969,  9576112,  9597232,  9618330,
  9639406,  9660458,  9681488,  9702495,  9723480,  9744441,  9765380,
  9786295,  9807188,  9828057,  9848903,  9869727,  9890526,  9911303,
  9932056,  9952786,  9973493,  9994176,  10014835, 10035471, 10056084,
  10076672, 10097237, 10117779, 10138296, 10158790, 10179259, 10199705,
  10220127, 10240524, 10260898, 10281247, 10301572, 10321873, 10342150,
  10362402, 10382630, 10402834, 10423013, 10443167, 10463297, 10483403,
  10503483, 10523539, 10543570, 10563577, 10583558, 10603515, 10623447,
  10643353, 10663235, 10683091, 10702923, 10722729, 10742510, 10762266,
  10781996, 10801701, 10821380, 10841035, 10860663, 10880266, 10899844,
  10919395, 10938922, 10958422, 10977896, 10997345, 11016768, 11036165,
  11055536, 11074881, 11094200, 11113493, 11132759, 11152000, 11171214,
  11190402, 11209563, 11228699, 11247807, 11266890, 11285945, 11304975,
  11323977, 11342953, 11361903, 11380825, 11399721, 11418590, 11437432,
  11456247, 11475035, 11493797, 11512531, 11531238, 11549918, 11568571,
  11587196, 11605794, 11624365, 11642909, 11661425, 11679914, 11698375,
  11716809, 11735215, 11753594, 11771945, 11790268, 11808564, 11826831,
  11845071, 11863283, 11881467, 11899623, 11917752, 11935852, 11953924,
  11971967, 11989983, 12007971, 12025930, 12043861, 12061763, 12079638,
  12097483, 12115301, 12133089, 12150850, 12168581, 12186284, 12203959,
  12221604, 12239221, 12256809, 12274369, 12291899, 12309400, 12326873,
  12344316, 12361731, 12379116, 12396472, 12413799, 12431097, 12448366,
  12465605, 12482815, 12499995, 12517147, 12534268, 12551360, 12568423,
  12585456, 12602460, 12619433, 12636378, 12653292, 12670177, 12687031,
  12703856, 12720651, 12737417, 12754152, 12770857, 12787532, 12804177,
  12820792, 12837376, 12853931, 12870455, 12886949, 12903413, 12919846,
  12936249, 12952621, 12968963, 12985275, 13001556, 13017806, 13034026,
  13050215, 13066373, 13082500, 13098597, 13114663, 13130698, 13146702,
  13162675, 13178618, 13194529, 13210409, 13226258, 13242076, 13257863,
  13273619, 13289343, 13305036, 13320698, 13336329, 13351928, 13367495,
  13383032, 13398536, 13414009, 13429451, 13444861, 13460240, 13475586,
  13490901, 13506185, 13521436, 13536656, 13551844, 13566999, 13582123,
  13597215, 13612276, 13627304, 13642299, 13657263, 13672195, 13687095,
  13701962, 13716797, 13731600, 13746370, 13761108, 13775814, 13790488,
  13805129, 13819737, 13834313, 13848856, 13863367, 13877845, 13892291,
  13906703, 13921083, 13935431, 13949745, 13964027, 13978276, 13992492,
  14006675, 14020825, 14034942, 14049026, 14063077, 14077095, 14091080,
  14105031, 14118950, 14132835, 14146687, 14160505, 14174291, 14188043,
  14201761, 14215446, 14229098, 14242716, 14256301, 14269852, 14283370,
  14296854, 14310304, 14323721, 14337104, 14350453, 14363769, 14377050,
  14390298, 14403512, 14416692, 14429838, 14442951, 14456029, 14469073,
  14482083, 14495059, 14508001, 14520909, 14533783, 14546622, 14559427,
  14572198, 14584935, 14597637, 14610305, 14622939, 14635538, 14648103,
  14660633, 14673129, 14685590, 14698017, 14710409, 14722767, 14735090,
  14747378, 14759632, 14771850, 14784034, 14796184, 14808298, 14820378,
  14832422, 14844432, 14856407, 14868347, 14880252, 14892122, 14903957,
  14915756, 14927521, 14939251, 14950945, 14962604, 14974228, 14985817,
  14997371, 15008889, 15020372, 15031819, 15043232, 15054608, 15065950,
  15077256, 15088526, 15099761, 15110960, 15122124, 15133253, 15144345,
  15155402, 15166424, 15177409, 15188359, 15199273, 15210152, 15220995,
  15231801, 15242572, 15253308, 15264007, 15274670, 15285298, 15295889,
  15306444, 15316964, 15327447, 15337895, 15348306, 15358681, 15369020,
  15379323, 15389589, 15399820, 15410014, 15420172, 15430293, 15440379,
  15450427, 15460440, 15470416, 15480356, 15490260, 15500126, 15509957,
  15519751, 15529508, 15539229, 15548914, 15558561, 15568173, 15577747,
  15587285, 15596786, 15606251, 15615678, 15625069, 15634424, 15643741,
  15653022, 15662266, 15671472, 15680643, 15689776, 15698872, 15707931,
  15716954, 15725939, 15734887, 15743799, 15752673, 15761510, 15770310,
  15779073, 15787799, 15796488, 15805140, 15813754, 15822331, 15830871,
  15839374, 15847839, 15856268, 15864658, 15873012, 15881328, 15889607,
  15897848, 15906052, 15914219, 15922348, 15930439, 15938494, 15946510,
  15954489, 15962431, 15970335, 15978201, 15986030, 15993821, 16001575,
  16009291, 16016969, 16024610, 16032213, 16039778, 16047305, 16054795,
  16062247, 16069661, 16077037, 16084375, 16091676, 16098939, 16106163,
  16113350, 16120499, 16127610, 16134683, 16141719, 16148716, 16155675,
  16162596, 16169479, 16176324, 16183131, 16189900, 16196631, 16203324,
  16209978, 16216595, 16223173, 16229713, 16236215, 16242679, 16249104,
  16255492, 16261841, 16268151, 16274424, 16280658, 16286854, 16293011,
  16299131, 16305211, 16311254, 16317258, 16323224, 16329151, 16335040,
  16340890, 16346702, 16352476, 16358211, 16363907, 16369565, 16375185,
  16380766, 16386308, 16391812, 16397277, 16402704, 16408092, 16413442,
  16418753, 16424025, 16429259, 16434454, 16439610, 16444727, 16449806,
  16454846, 16459848, 16464811, 16469735, 16474620, 16479466, 16484274,
  16489043, 16493773, 16498464, 16503117, 16507731, 16512305, 16516841,
  16521338, 16525797, 16530216, 16534596, 16538938, 16543240, 16547504,
  16551729, 16555914, 16560061, 16564169, 16568238, 16572268, 16576259,
  16580211, 16584124, 16587997, 16591832, 16595628, 16599385, 16603102,
  16606781, 16610420, 16614021, 16617582, 16621104, 16624588, 16628032,
  16631436, 16634802, 16638129, 16641416, 16644664, 16647874, 16651044,
  16654174, 16657266, 16660318, 16663331, 16666305, 16669240, 16672136,
  16674992, 16677809, 16680587, 16683325, 16686025, 16688685, 16691305,
  16693887, 16696429, 16698932, 16701396, 16703820, 16706205, 16708551,
  16710857, 16713124, 16715352, 16717540, 16719689, 16721799, 16723869,
  16725900, 16727892, 16729844, 16731757, 16733631, 16735465, 16737260,
  16739015, 16740731, 16742408, 16744045, 16745643, 16747202, 16748721,
  16750200, 16751640, 16753041, 16754403, 16755725, 16757007, 16758250,
  16759454, 16760618, 16761743, 16762828, 16763874, 16764881, 16765847,
  16766775, 16767663, 16768512, 16769321, 16770091, 16770821, 16771512,
  16772163, 16772775, 16773347, 16773880, 16774374, 16774828, 16775242,
  16775617, 16775953, 16776249, 16776505, 16776723, 16776900, 16777038,
  16777137, 16777196, 16777216, 16777216};
